{"version":3,"sources":["Components/NavigationMenu.js","Components/Navigation.js","Components/Header.js","Components/Footer.js","Components/Loader.js","Components/ProductCard.js","Hooks/HttpRequest.js","Views/Home.js","Views/About.js","Views/Product.js","App.js","serviceWorker.js","index.js"],"names":["NavigationMenu","props","className","to","onClick","closeMenu","Navigation","useState","showMenu","setShowMenu","masktransitions","useTransition","from","position","opacity","enter","leave","menutransitions","transform","icon","faBars","map","item","key","div","style","Header","Footer","Loader","ProductCard","Card","product","id","CardImg","backgroundImage","images","CardBody","CardTitle","name","CardText","price","description","Button","type","color","useAxiosGet","url","loading","data","error","request","setRequest","useEffect","axios","get","then","response","catch","Home","products","content","About","Product","useParams","src","alt","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ed9e8c9e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavigationMenu(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"font-bold\">The menu</div>\r\n      <ul>\r\n        <li>\r\n          <Link\r\n            to=\"/\"\r\n            className=\"text-blue-500 py-3 border-t border-b block\"\r\n            onClick={props.closeMenu}\r\n          >\r\n            Home\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/about\"\r\n            className=\"text-blue-500 py-3 border-b block\"\r\n            onClick={props.closeMenu}\r\n          >\r\n            About\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavigationMenu;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport NavigationMenu from \"./NavigationMenu\";\r\n\r\nfunction Navigation() {\r\n  const [showMenu, setShowMenu] = useState(false);\r\n\r\n  const masktransitions = useTransition(showMenu, null, {\r\n    from: { position: \"absolute\", opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n  });\r\n\r\n  const menutransitions = useTransition(showMenu, null, {\r\n    from: { opacity: 0, transform: \"translateX(-100%)\" },\r\n    enter: { opacity: 1, transform: \"translateX(0%)\" },\r\n    leave: { opacity: 0, transform: \"translateX(-100%)\" },\r\n  });\r\n\r\n  return (\r\n    <nav>\r\n      <span className=\"text-xl\">\r\n        <FontAwesomeIcon icon={faBars} onClick={() => setShowMenu(!showMenu)} />\r\n      </span>\r\n\r\n      {masktransitions.map(\r\n        ({ item, key, props }) =>\r\n          item && (\r\n            <animated.div\r\n              key={key}\r\n              style={props}\r\n              className=\"bg-black-t-50 fixed top-0 left-0 w-full h-full z-50\"\r\n              onClick={() => setShowMenu(false)}\r\n            ></animated.div>\r\n          )\r\n      )}\r\n\r\n      {menutransitions.map(\r\n        ({ item, key, props }) =>\r\n          item && (\r\n            <animated.div\r\n              key={key}\r\n              style={props}\r\n              className=\"fixed bg-white top-0 left-0 w-4/5 h-full z-50 shadow p-3\"\r\n            >\r\n              <NavigationMenu closeMenu={() => setShowMenu(false)} />\r\n            </animated.div>\r\n          )\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"border-b p-3 justify-between items-center\">\r\n      <Navigation />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"bg-gray-200 text-center text-xs p-3 absolute bottom-0 w-full\">\r\n      &copy; Copyright 2020\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nfunction ProductCard(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12 col-md-3\"></div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <Card>\r\n            <Link to={`/products/${props.product.id}`}>\r\n              <CardImg\r\n                style={{ backgroundImage: `url('${props.product.images}')` }}\r\n                className=\"w-full h-64 bg-blue bg-cover\"\r\n              />\r\n            </Link>\r\n\r\n            <CardBody>\r\n              <CardTitle className=\"font-bold text-xl mb-3\">\r\n                <Link to={`/products/${props.product.id}`}>\r\n                  {props.product.name}\r\n                </Link>\r\n              </CardTitle>\r\n              <CardText className=\"font-bold mb-3\">\r\n                {props.product.price}\r\n              </CardText>\r\n              <CardText className=\"mb-3\">{props.product.description}</CardText>\r\n              <Link to={`/products/${props.product.id}`}>\r\n                <Button type=\"submit\" color=\"primary\">\r\n                  View\r\n                </Button>\r\n              </Link>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12 col-md-3\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n\r\n{\r\n  /* <div>\r\n  <Card>\r\n    <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n    <CardBody>\r\n      <CardTitle>{dish.name}</CardTitle>\r\n      <CardText>{dish.description}</CardText>\r\n    </CardBody>\r\n  </Card>\r\n</div>; */\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport function useAxiosGet(url) {\r\n  const [request, setRequest] = useState({\r\n    loading: false,\r\n    data: null,\r\n    error: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setRequest({\r\n      loading: true,\r\n      data: null,\r\n      error: false,\r\n    });\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        setRequest({\r\n          loading: false,\r\n          data: response.data,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setRequest({\r\n          loading: false,\r\n          data: null,\r\n          error: true,\r\n        });\r\n      });\r\n  }, [url]);\r\n\r\n  return request;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Loader from \"../Components/Loader\";\r\nimport ProductCard from \"../Components/ProductCard\";\r\nimport { useAxiosGet } from \"../Hooks/HttpRequest\";\r\n\r\nfunction Home() {\r\n  // https://mockapi.io/projects/5f50e09c5e984800161231d2\r\n  const url = `https://5f50e09c5e984800161231d1.mockapi.io/api/v1/products/?page=1&limit=20`;\r\n\r\n  let products = useAxiosGet(url);\r\n  let content = null;\r\n\r\n  if (products.error) {\r\n    content = (\r\n      <p className=\"text-center\">\r\n        There was an error, please refresh or try again.\r\n      </p>\r\n    );\r\n  }\r\n\r\n  if (products.loading) {\r\n    content = <Loader></Loader>;\r\n  }\r\n\r\n  if (products.data) {\r\n    content = products.data.map((product) => (\r\n      <div key={product.id}>\r\n        <ProductCard product={product} />\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"font-bold text-2xl text-center\">Best Sellers</h1>\r\n      <br />\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h1 className=\"font-bold text-2xl\">About Us</h1>\r\n      <p>This is the about page for you to read.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loader from \"../Components/Loader\";\r\nimport { useAxiosGet } from \"../Hooks/HttpRequest\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nfunction Product() {\r\n  const { id } = useParams(),\r\n    url = `https://5f50e09c5e984800161231d1.mockapi.io/api/v1/products/${id}`;\r\n\r\n  let product = useAxiosGet(url);\r\n\r\n  let content = null;\r\n\r\n  if (product.error) {\r\n    content = <p>There was an error, please refresh or try again.</p>;\r\n  }\r\n\r\n  if (product.loading) {\r\n    content = <Loader></Loader>;\r\n  }\r\n\r\n  if (product.data) {\r\n    content = (\r\n      <div className=\"container\">\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 col-md-3\"></div>\r\n          <div className=\"col-12 col-md-6\">\r\n            <Card className=\"p-2\">\r\n              <CardTitle className=\"text-2xl font-bold mb-3\">\r\n                {product.data.name}\r\n              </CardTitle>\r\n              <CardImg src={product.data.images} alt={product.data.name} />\r\n              <CardText className=\"font-bold text-xl mb-3\">\r\n                ${product.data.price}\r\n              </CardText>\r\n              <CardText>{product.data.description}</CardText>\r\n            </Card>\r\n          </div>\r\n          <div className=\"col-12 col-md-3\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <div>{content}</div>;\r\n}\r\n\r\nexport default Product;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\n\nimport Home from \"./Views/Home\";\nimport About from \"./Views/About\";\nimport Product from \"./Views/Product\";\n\nfunction App() {\n  return (\n    <div className=\"relative pb-10 min-h-screen\">\n      <Router>\n        <Header />\n\n        <div className=\"p-3\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/products/:id\">\n              <Product />\n            </Route>\n          </Switch>\n        </div>\n\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"bootstrap-social/bootstrap-social.css\";\nimport \"./tailwind.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}